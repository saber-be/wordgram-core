name: Deploy to server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup ssh
        id: setup_ssh
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.CORE }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.SERVER_HOST}} >> ~/.ssh/known_hosts
        continue-on-error: true

      - name: Deploy code via SSH
        id: deploy_code
        run: |
          ssh -i ~/.ssh/id_rsa root@${{secrets.SERVER_HOST}}  "cd ${{ secrets.PROJECT_DIR }} && git checkout master && git pull && docker-compose down && docker-compose up -d && exit"
        continue-on-error: true

      - name: Send fail to webhook
        run: |
          echo "${{ steps.setup_ssh.outcome }} ${{ steps.deploy_code.outcome }}"
          if [ ${{ steps.setup_ssh.outcome }} == 'failure' ] || [ ${{ steps.deploy_code.outcome }} == 'failure' ]; then
            echo "Deployment status Failed"
            curl -X POST -H "Content-Type: application/json" -d '{"text": "Deployment status Failed"}' "https://api.telegram.org/bot1473425387:AAGnGxkdgw-et6J20o3BKBjYum0AMApNsfc/sendMessage?chat_id=-4276022020"
          else
            echo "Deployment status Success"
            curl -X POST -H "Content-Type: application/json" -d '{"text": "Deployment status Success"}' "https://api.telegram.org/bot1473425387:AAGnGxkdgw-et6J20o3BKBjYum0AMApNsfc/sendMessage?chat_id=-4276022020"
          fi

      - name: clean up
        run: rm -rf ~/.ssh
