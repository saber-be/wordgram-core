version: '3'
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 80 --reload --log-level debug
    ports:
      - ${PORT}:80
    environment:
      - DEBUG=${DEBUG}
      - ACCOUNT_USERNAME=${ACCOUNT_USERNAME}
      - ACCOUNT_PASSWORD=${ACCOUNT_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - BASE_URL=${BASE_URL}
    depends_on:
      - mongo
      - kafka
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - ./app:/code/app
      - ./logs/fastapi:/code/logs
      - ./logs/docker:/var/log
    networks:
      - wordgram-network
  consumer-1:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m app.services.fetch_from_instagram.py
    
    environment:
      - DEBUG=${DEBUG}
      - ACCOUNT_USERNAME=${ACCOUNT_USERNAME}
      - ACCOUNT_PASSWORD=${ACCOUNT_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
    depends_on:
      - mongo
      - kafka
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - ./app:/code/app
      - ./logs/consumer-1:/code/logs
      - ./logs/docker-consumer-1:/var/log
    networks:
      - wordgram-network
  mongo:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - ./data:/data/db
    networks:
      - wordgram-network
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - ./kafka:/bitnami/kafka
    networks:
      - wordgram-network
networks:
  wordgram-network:
    driver: bridge
